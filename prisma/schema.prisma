generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Product {
  id           String      @id @default(cuid())
  slug         String      @unique
  name         String      @db.Text
  price        Decimal?
  priceInt     Int         @default(0)
  rating       Int         @default(0)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  description  String      @db.Text
  countInStock Int
  categoryId   String
  likes        Int         @default(0)
  mainImage    String?
  sales        Int         @default(0)
  images       Image[]
  category     Category    @relation(fields: [categoryId], references: [id])
  orderItem    OrderItem[]

  @@index([categoryId])
}

model Image {
  id        String   @id @default(cuid())
  url       String
  productId String
  createdAt DateTime @default(now())
  name      String
  mainImage Boolean  @default(false)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}

model Category {
  id            String          @id @default(cuid())
  name          String          @unique
  slug          String          @unique
  product       Product[]
  categoryImage CategoryImage[]
}

model CategoryImage {
  id         String   @id @default(cuid())
  name       String
  url        String
  categoryId String
  createdAt  DateTime @default(now())
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@index([categoryId])
}

model Order {
  id        String      @id @default(cuid())
  isPaid    Boolean     @default(false)
  phone     String      @default("")
  address   String      @default("")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  name      String      @default("")
  status    OrderStatus @default(pending)
  cn        String      @unique
  city      String      @default("")
  orderItem OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  qty       Int     @default(0)

  @@index([productId])
  @@index([orderId])
}

enum OrderStatus {
  pending
  intransit
  outfordelivery
  delivered
}
